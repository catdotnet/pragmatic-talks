// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using PragmaticTalks.Model;
using System;

namespace PragmaticTalks.Migrations
{
    [DbContext(typeof(PragmaticContext))]
    partial class PragmaticContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.0-rtm-26452")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("PragmaticTalks.Model.Speaker", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("AvatarUrl");

                    b.Property<string>("DisplayName");

                    b.Property<string>("Email");

                    b.Property<bool>("IsAdministrator");

                    b.Property<int>("TalksCounter");

                    b.HasKey("Id");

                    b.ToTable("Speakers");
                });

            modelBuilder.Entity("PragmaticTalks.Model.Tag", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("Tags");
                });

            modelBuilder.Entity("PragmaticTalks.Model.Talk", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("DateCreation");

                    b.Property<bool>("IsDeleted");

                    b.Property<int?>("SpeakerId");

                    b.Property<string>("Title")
                        .HasMaxLength(37);

                    b.HasKey("Id");

                    b.HasIndex("SpeakerId");

                    b.ToTable("Talks");
                });

            modelBuilder.Entity("PragmaticTalks.Model.TalkTag", b =>
                {
                    b.Property<int>("TalkId");

                    b.Property<int>("TagId");

                    b.HasKey("TalkId", "TagId");

                    b.HasIndex("TagId");

                    b.ToTable("TalkTags");
                });

            modelBuilder.Entity("PragmaticTalks.Model.Talk", b =>
                {
                    b.HasOne("PragmaticTalks.Model.Speaker", "Speaker")
                        .WithMany()
                        .HasForeignKey("SpeakerId");
                });

            modelBuilder.Entity("PragmaticTalks.Model.TalkTag", b =>
                {
                    b.HasOne("PragmaticTalks.Model.Tag", "Tag")
                        .WithMany()
                        .HasForeignKey("TagId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("PragmaticTalks.Model.Talk", "Talk")
                        .WithMany("Tags")
                        .HasForeignKey("TalkId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
